{
    "variables": {
        "admin_username": "admin",
        "admin_password": "admin",

        "cookbook_name": "not_realy_a_cookbook_name",

        "dir_cookbooks_src": "src/cookbooks",
        "dir_cookbooks_vendors": "packages/vendor/cookbooks",
        "dir_http_user": null,
        "dir_log": null,
        "dir_src_provisioning": "src/provisioning",
        "dir_temp": null,
        "dir_vm_import": null,

        "vm_import_directory": null,
        "vm_name": "not_really_a_vm_name",
        "vm_ram_size_in_mb": "1024",
        "vm_switch_name": "this_switch_does_not_exist"
    },
    "builders": [
        {
            "boot_wait": "5s",
            "boot_command": [],
            "clone_from_vmxc_path": "{{ user `dir_vm_import` }}",
            "communicator": "ssh",
            "enable_dynamic_memory": false,
            "enable_mac_spoofing": false,
            "enable_secure_boot": true,
            "enable_virtualization_extensions": false,
            "generation": 2,
            "guest_additions_mode": "disable",
            "headless": true,
            "http_directory": "{{ user `dir_http_user` }}",
            "http_port_min": 8150,
            "http_port_max": 8160,
            "output_directory": "{{ user `dir_temp` }}/{{ user `vm_name` }}",
            "ram_size": "{{ user `vm_ram_size_in_mb` }}",
            "secure_boot_template": "MicrosoftUEFICertificateAuthority",
            "shutdown_command": "echo '{{user `admin_password`}}' | sudo -S -E shutdown -P now",
            "shutdown_timeout": "5m",
            "skip_compaction": false,
            "ssh_password": "{{user `admin_password`}}",
            "ssh_timeout": "4h",
            "ssh_username": "{{user `admin_username`}}",
            "switch_name": "{{user `vm_switch_name`}}",
            "type": "hyperv-vmcx",
            "vlan_id": "{{ user `vm_switch_vlan` }}",
            "vm_name": "{{ user `vm_name` }}"
        }
    ],
    "provisioners": [
        {
            "command": "Set-VM -Name {{ user `vm_name` }} -AutomaticCheckpointsEnabled $false",
            "execute_command": ["Powershell.exe", "-NonInteractive", "-NoLogo", "-NoProfile", "-Command", "{{.Command}}"],
            "type": "shell-local"
        },
        {
            "command": "Get-VMSnapshot -VMName {{ user `vm_name` }} | Remove-VMSnapshot",
            "execute_command": ["Powershell.exe", "-NonInteractive", "-NoLogo", "-NoProfile", "-Command", "{{.Command}}"],
            "type": "shell-local"
        },

        {
            "destination": "/tmp/unbound_zones.conf",
            "source": "{{ user `dir_src_provisioning` }}/unbound_zones.conf",
            "type": "file"
        },
        {
            "expect_disconnect": false,
            "inline": [
                "dos2unix /tmp/unbound_zones.conf",
                "sudo cp -a /tmp/unbound_zones.conf /etc/unbound.d/unbound_zones.conf",
                "sudo systemctl restart unbound"
            ],
            "type": "shell"
        },

        {
            "expect_disconnect": false,
            "inline": [
                "sudo -S -E apt-get install --assume-yes scsitools"
            ],
            "type": "shell"
        },

        {
            "expect_disconnect": false,
            "inline": [
                "sudo lsblk -o NAME,FSTYPE,SIZE,MOUNTPOINT,LABEL",
                "sudo fdisk -l",
                "sudo blkid -s UUID -o value /dev/sda"
            ],
            "type": "shell"
        },
        {
            "env_var_format": "$env:%s=\"%s\"; ",
            "execute_command": ["powershell.exe", "{{.Vars}} {{.Script}}"],
            "inline": [
                "New-VHD -Path '{{ user `dir_temp` }}/{{ build_name }}/Virtual Hard Disks/nexus_scratch.vhdx' -SizeBytes 250GB -BlockSizeBytes 1MB",
                "Add-VmHardDiskDrive -VMName {{ user `vm_name` }} -Path '{{ user `dir_temp` }}/{{build_name}}/Virtual Hard Disks/nexus_scratch.vhdx'"
            ],
            "tempfile_extension": ".ps1",
            "type": "shell-local"
        },
        {
            "expect_disconnect": false,
            "inline": [
                "sudo rescan-scsi-bus.sh --remove --issue-lip",
                "sudo mkdir -p /srv/nexus/blob/scratch",
                "sudo mkfs.ext4 /dev/sdb",
                "echo \"UUID=$(sudo blkid -s UUID -o value /dev/sdb) /srv/nexus/blob/scratch ext4 defaults 0 0 \" | sudo tee -a /etc/fstab"
            ],
            "pause_before" : "15s",
            "type": "shell"
        },

        {
            "expect_disconnect": false,
            "inline": [
                "sudo lsblk -o NAME,FSTYPE,SIZE,MOUNTPOINT,LABEL",
                "sudo fdisk -l",
                "sudo blkid -s UUID -o value /dev/sda"
            ],
            "type": "shell"
        },
        {
            "env_var_format": "$env:%s=\"%s\"; ",
            "execute_command": ["powershell.exe", "{{.Vars}} {{.Script}}"],
            "inline": [
                "New-VHD -Path '{{ user `dir_temp` }}/{{ build_name }}/Virtual Hard Disks/nexus_docker.vhdx' -SizeBytes 150GB -BlockSizeBytes 1MB",
                "Add-VmHardDiskDrive -VMName {{ user `vm_name` }} -Path '{{ user `dir_temp` }}/{{build_name}}/Virtual Hard Disks/nexus_docker.vhdx'"
            ],
            "tempfile_extension": ".ps1",
            "type": "shell-local"
        },
        {
            "expect_disconnect": false,
            "inline": [
                "sudo rescan-scsi-bus.sh --remove --issue-lip",
                "sudo mkdir -p /srv/nexus/blob/docker",
                "sudo mkfs.ext4 /dev/sdc",
                "echo \"UUID=$(sudo blkid -s UUID -o value /dev/sdc) /srv/nexus/blob/docker ext4 defaults 0 0 \" | sudo tee -a /etc/fstab"
            ],
            "pause_before" : "15s",
            "type": "shell"
        },

        {
            "expect_disconnect": false,
            "inline": [
                "sudo lsblk -o NAME,FSTYPE,SIZE,MOUNTPOINT,LABEL",
                "sudo fdisk -l",
                "sudo blkid -s UUID -o value /dev/sda"
            ],
            "type": "shell"
        },
        {
            "env_var_format": "$env:%s=\"%s\"; ",
            "execute_command": ["powershell.exe", "{{.Vars}} {{.Script}}"],
            "inline": [
                "New-VHD -Path '{{ user `dir_temp` }}/{{ build_name }}/Virtual Hard Disks/nexus_nuget.vhdx' -SizeBytes 50GB -BlockSizeBytes 1MB",
                "Add-VmHardDiskDrive -VMName {{ user `vm_name` }} -Path '{{ user `dir_temp` }}/{{build_name}}/Virtual Hard Disks/nexus_nuget.vhdx'"
            ],
            "tempfile_extension": ".ps1",
            "type": "shell-local"
        },
        {
            "expect_disconnect": false,
            "inline": [
                "sudo rescan-scsi-bus.sh --remove --issue-lip",
                "sudo mkdir -p /srv/nexus/blob/nuget",
                "sudo mkfs.ext4 /dev/sdd",
                "echo \"UUID=$(sudo blkid -s UUID -o value /dev/sdd) /srv/nexus/blob/nuget ext4 defaults 0 0 \" | sudo tee -a /etc/fstab"
            ],
            "pause_before" : "15s",
            "type": "shell"
        },

        {
            "env_var_format": "$env:%s=\"%s\"; ",
            "execute_command": ["powershell.exe", "{{.Vars}} {{.Script}}"],
            "inline": [
                "New-VHD -Path '{{ user `dir_temp` }}/{{ build_name }}/Virtual Hard Disks/nexus_npm.vhdx' -SizeBytes 50GB -BlockSizeBytes 1MB",
                "Add-VmHardDiskDrive -VMName {{ user `vm_name` }} -Path '{{ user `dir_temp` }}/{{build_name}}/Virtual Hard Disks/nexus_npm.vhdx'"
            ],
            "tempfile_extension": ".ps1",
            "type": "shell-local"
        },
        {
            "expect_disconnect": false,
            "inline": [
                "sudo rescan-scsi-bus.sh --remove --issue-lip",
                "sudo mkdir -p /srv/nexus/blob/npm",
                "sudo mkfs.ext4 /dev/sde",
                "echo \"UUID=$(sudo blkid -s UUID -o value /dev/sde) /srv/nexus/blob/npm ext4 defaults 0 0 \" | sudo tee -a /etc/fstab"
            ],
            "pause_before" : "15s",
            "type": "shell"
        },

        {
            "env_var_format": "$env:%s=\"%s\"; ",
            "execute_command": ["powershell.exe", "{{.Vars}} {{.Script}}"],
            "inline": [
                "New-VHD -Path '{{ user `dir_temp` }}/{{ build_name }}/Virtual Hard Disks/nexus_artefacts.vhdx' -SizeBytes 150GB -BlockSizeBytes 1MB",
                "Add-VmHardDiskDrive -VMName {{ user `vm_name` }} -Path '{{ user `dir_temp` }}/{{build_name}}/Virtual Hard Disks/nexus_artefacts.vhdx'"
            ],
            "tempfile_extension": ".ps1",
            "type": "shell-local"
        },
        {
            "expect_disconnect": false,
            "inline": [
                "sudo rescan-scsi-bus.sh --remove --issue-lip",
                "sudo mkdir -p /srv/nexus/blob/artefacts",
                "sudo mkfs.ext4 /dev/sdf",
                "echo \"UUID=$(sudo blkid -s UUID -o value /dev/sdf) /srv/nexus/blob/artefacts ext4 defaults 0 0 \" | sudo tee -a /etc/fstab"
            ],
            "pause_before" : "15s",
            "type": "shell"
        },

        {
            "expect_disconnect": true,
            "inline": [
                "sudo shutdown -r now"
            ],
            "type": "shell"
        },
        {
            "expect_disconnect": false,
            "inline": [
                "echo \"System should have rebooted ...\""
            ],
            "pause_before" : "15s",
            "type": "shell"
        },

        {
            "expect_disconnect": false,
            "inline": [
                "sudo lsblk -o NAME,FSTYPE,SIZE,MOUNTPOINT,LABEL",
                "sudo fdisk -l",
                "sudo blkid -s UUID -o value /dev/sda"
            ],
            "type": "shell"
        },

        {
            "cookbook_paths": [
                "{{ user `dir_cookbooks_vendors` }}"
            ],
            "execute_command": "sudo chef-solo --no-color -c {{.ConfigPath}} -j {{.JsonPath}}",
            "guest_os_type": "unix",
            "install_command": "echo \"Do nothing because chef should already be installed\"",
            "run_list": [
                "{{ user `cookbook_name` }}::default"
            ],
            "type": "chef-solo"
        },
        {
            "expect_disconnect": false,
            "inline": [
                "sudo dpkg -P chef",
                "sudo rm -rf /etc/unbound.d/unbound_zones"
            ],
            "type": "shell"
        },
        {
            "type": "file",
            "source": "/home/nexus/log/nexus.log",
            "destination": "{{ user `dir_log` }}/nexus.log",
            "direction" : "download"
        }
    ]
}
